<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Navegar</name>
    </assembly>
    <members>
        <member name="T:Navegar.ViewModelHistoryTypeException">
            <summary>
            Exception  permettant de capturer l'erreur indiquant que le ViewModel demandé pour l'historique de navigation n'hérite pas de ViewModelBase
            </summary>
        </member>
        <member name="M:Navegar.ViewModelHistoryTypeException.#ctor(System.String)">
            <summary>
            Constructeur de l'exception
            </summary>
            <param name="type">Type de l'objet passé en paramètre pour l'historique</param>
        </member>
        <member name="T:Navegar.CurrentViewNavigationAttribute">
            <summary>
            Attribut permettant de retrouver la propriétée servant d'affichage du nouveau ViewModel dans le ViewModel principal
            </summary>
        </member>
        <member name="M:Navegar.CurrentViewNavigationAttribute.GetCurrentViewProperty(System.Type)">
            <summary>
            Retrieve informations on CurrentViewAttribute
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Navegar.FunctionToLoadNavigationException">
            <summary>
            Exception  permettant de capturer les erreurs de chargement de fonction, lors de la navigation
            </summary>
        </member>
        <member name="M:Navegar.FunctionToLoadNavigationException.#ctor(System.String,System.String)">
            <summary>
            Constructeur de l'exception
            </summary>
            <param name="functionToLoadName">Nom de la fonction qui doit etre lancée </param>
            <param name="typeName">Nom du Type d'objet contenant la fonction</param>
        </member>
        <member name="T:Navegar.INavigation">
            <summary>
            Interface de la classe de navigation
            </summary>
        </member>
        <member name="M:Navegar.INavigation.GenerateMainViewModelInstance``1">
            <summary>
            Génére l'instance du ViewModel principal
            </summary>
            <typeparam name="TMain">
            Type du ViewModel principal
            </typeparam>
        </member>
        <member name="M:Navegar.INavigation.GetMainViewModelInstance``1">
            <summary>
            Récupére l'instance du ViewModel principal
            </summary>
            <typeparam name="TMain">
            Type du ViewModel principal
            </typeparam>
            <returns>
            Instance du ViewModel principal
            </returns>
        </member>
        <member name="M:Navegar.INavigation.NavigateTo``1(System.Object[])">
            <summary>
            Naviguer vers un ViewModel 
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.INavigation.NavigateTo``1(System.Boolean,System.Object[])">
            <summary>
            Naviguer vers un ViewModel 
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.INavigation.NavigateTo``1(System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Naviguer vers un ViewModel
            Le paramètre <param name="functionToLoad"></param> permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.INavigation.NavigateTo``1(GalaSoft.MvvmLight.ViewModelBase,System.Object[],System.Boolean)">
            <summary>
            Navigeur vers un ViewModel, avec un ViewModel en historique précédent
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="currentInstance">
            Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.INavigation.NavigateTo``1(GalaSoft.MvvmLight.ViewModelBase,System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Navigeur vers un ViewModel, avec un ViewModel en historique précédent. 
            Le paramètre <param name="functionToLoad"></param> permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="currentInstance">
            Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.INavigation.CanGoBack">
            <summary>
            Déterminer si un historique est possible depuis le ViewModel en cours
            </summary>
            <returns>
            <c>true</c> si la navigation est possible, sinon <c>false</c>
            </returns>
        </member>
        <member name="M:Navegar.INavigation.GoBack">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours, si une navigation arriére est possible
            </summary>
        </member>
        <member name="M:Navegar.INavigation.GoBack(System.String,System.Object[])">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours, si une navigation arriére est possible
            </summary>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
        </member>
        <member name="M:Navegar.INavigation.GetTypeViewModelToBack">
            <summary>
            Permet de connaitre le type du ViewModel au niveau n-1 de l'historique de navigation
            </summary>
            <returns>Type du ViewModel</returns>
        </member>
        <member name="M:Navegar.INavigation.GetViewModelCurrent">
            <summary>
            Permet de retrouver l'instance du ViewModel courant
            </summary>
            <returns>ViewModel courant</returns>
        </member>
        <member name="T:Navegar.Navigation">
             <summary>
             Implémentation de la classe de navigation
             </summary>
             <example>
               On réalise la navigation suivante :
             
               MainViewModel -&gt; FirstViewModel &lt;-&gt; SecondViewModel
              
               <code>
             Dans le ViewModelLocator.cs :
             
                public ViewModelLocator()
                {
                   ServiceLocator.SetLocatorProvider(() => SimpleIoc.Default);
            
                   //1. Enregistrer la classe de navigation dans l'IOC
                   SimpleIoc.Default.Register&lt;INavigation, Navigation&gt;();
            
                   //2. Générer le viewmodel principal, le type du viewmodel peut être n'importe lequel
                   SimpleIoc.Default.GetInstance&lt;INavigation&gt;().GenerateMainViewModelInstance&lt;MainViewModel&gt;();
                }
            
                public MainViewModel Main
                {
                    //3. Retrouve le viewmodel principal
                    get
                    {
                        return SimpleIoc.Default.GetInstance&lt;INavigation&gt;().GetMainViewModelInstance&lt;MainViewModel&gt;();
                    }
                }
            
             
             
             Dans MainViewModel.cs :
             
                //Pour aller vers un autre ViewModel
                SimpleIoc.Default.GetInstance&lt;INavigation&gt;().NavigateTo&lt;FirstViewModel&gt;();
             
             
             
             Dans FirstViewModel.cs :
             
                //Pour aller vers SecondViewModel.cs, en supposant que le constructeur prenne un argument et que l'on veuille revenir vers FirstViewModel
                SimpleIoc.Default.GetInstance&lt;INavigation&gt;().NavigateTo&lt;SecondViewModel&gt;(this, new object[] { Data }, true);
             
             
             
             Dans SecondViewModel.cs :
             
                //Pour revenir vers FirstViewModel :
                if(SimpleIoc.Default.GetInstance&lt;INavigation&gt;().CanGoBack())
                {
                   SimpleIoc.Default.GetInstance&lt;INavigation&gt;().GoBack();
                }
               </code>
             </example>
        </member>
        <member name="M:Navegar.Navigation.GenerateMainViewModelInstance``1">
            <summary>
            Génére l'instance du ViewModel principal
            </summary>
            <typeparam name="TMain">
            Type du ViewModel principal
            </typeparam>
        </member>
        <member name="M:Navegar.Navigation.GetMainViewModelInstance``1">
            <summary>
            Récupére l'instance du ViewModel principal
            </summary>
            <typeparam name="TMain">
            Type du ViewModel principal
            </typeparam>
            <returns>
            Instance du ViewModel principal
            </returns>
        </member>
        <member name="M:Navegar.Navigation.NavigateTo``1(System.Object[])">
            <summary>
            Naviguer vers un ViewModel 
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.Navigation.NavigateTo``1(System.Boolean,System.Object[])">
            <summary>
            Naviguer vers un ViewModel 
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.Navigation.NavigateTo``1(System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Naviguer vers un ViewModel
            Le paramètre <param name="functionToLoad"></param> permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>     
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>  
        </member>
        <member name="M:Navegar.Navigation.NavigateTo``1(GalaSoft.MvvmLight.ViewModelBase,System.Object[],System.Boolean)">
            <summary>
            Naviguer vers un ViewModel, avec un ViewModel en historique précédent
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="currentInstance">
            Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.Navigation.NavigateTo``1(GalaSoft.MvvmLight.ViewModelBase,System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Navigeur vers un ViewModel, avec un ViewModel en historique précédent. 
            Le paramètre <param name="functionToLoad"></param> permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="currentInstance">
            Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.Navigation.CanGoBack">
            <summary>
            Déterminer si un historique est possible depuis le ViewModel en cours
            </summary>
            <returns>
            <c>true</c> si la navigation est possible, sinon <c>false</c>
            </returns>
        </member>
        <member name="M:Navegar.Navigation.GoBack">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours, si une navigation arriére est possible
            </summary>
        </member>
        <member name="M:Navegar.Navigation.GoBack(System.String,System.Object[])">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours, si une navigation arriére est possible
            </summary>
            /// <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
        </member>
        <member name="M:Navegar.Navigation.GetTypeViewModelToBack">
            <summary>
            Permet de connaitre le type du ViewModel au niveau n-1 de l'historique de navigation
            </summary>
            <returns>Type du ViewModel</returns>
        </member>
        <member name="M:Navegar.Navigation.GetViewModelCurrent">
            <summary>
            Permet de retrouver l'instance du ViewModel courant
            </summary>
            <returns>ViewModel courant</returns>
        </member>
        <member name="M:Navegar.Navigation.Navigate(System.Type,System.String,System.Object[])">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours
            </summary>
            <param name="viewModelToName">
            Type du Viewmodel vers lequel la navigation est effectuée
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
        </member>
        <member name="M:Navegar.Navigation.Navigate``1(System.Type,System.Type,System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Naviguer vers un ViewModel 
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="viewModelToName">
            Type du Viewmodel vers lequel la navigation est effectuée
            </param>
            <param name="viewModelFromName">
            Type du Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.Navigation.SetCurrentView(GalaSoft.MvvmLight.ViewModelBase)">
            <summary>
            Affecte la propriété de view courante du ViewModel principal
            </summary>
            <param name="instanceToNavigate">
            Instance de la vue qui est devenue la vue courante
            </param>
        </member>
        <member name="T:Navegar.NavigationException">
            <summary>
            Exception  permettant de capturer les erreurs se passant durant la navigation
            </summary>
        </member>
        <member name="M:Navegar.NavigationException.#ctor(System.Exception)">
            <summary>
            Constructeur de l'exception
            </summary>
            <param name="e">
            L'exception déclenchée lors de la navigation
            </param>
        </member>
    </members>
</doc>
