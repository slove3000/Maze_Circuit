<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="C:\Users\addenis\Documents\GitHub\Maze_Circuit\IHM_Maze Circuit\AxView\bin\Debug\AxView.exe">
   <Modules>
    <Module Name="axview.exe">
     <Namespaces>
      <Namespace Name="AxView.Resources.Elements">
       <Types>
        <Type Name="DynamicImageButton" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-09-20 09:56:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\addenis\Documents\GitHub\Maze_Circuit\IHM_Maze Circuit\AxView\Resources\Elements" File="DynamicImageButton.cs" Line="47">'DynamicImageButton.DynamicImageButton()' lève à nouveau une exception interceptée et la spécifie de manière explicite en tant qu'argument. Utilisez 'throw' sans argument à la place, afin de conserver l'emplacement de la pile où l'exception à été levée pour la première fois.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Levez à nouveau une exception pour conserver les détails de la pile</Name>
   <Description>Utilisez l'instruction de levée IL pour conserver les détails d'origine de la pile lorsque vous levez à nouveau une exception interceptée.</Description>
   <Resolution Name="Default">{0} lève à nouveau une exception interceptée et la spécifie de manière explicite en tant qu'argument. Utilisez 'throw' sans argument à la place, afin de conserver l'emplacement de la pile où l'exception à été levée pour la première fois.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Catégorie</String>
  <String Key="Certainty">Certitude</String>
  <String Key="CollapseAll">Réduire tout</String>
  <String Key="CheckId">ID de contrôle</String>
  <String Key="Error">Erreur</String>
  <String Key="Errors">erreur(s)</String>
  <String Key="ExpandAll">Développer tout</String>
  <String Key="Help">Aide</String>
  <String Key="Line">Ligne</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Emplacement non stocké dans le fichier Pdb]</String>
  <String Key="Project">Projet</String>
  <String Key="Resolution">Résolution</String>
  <String Key="Rule">Règle</String>
  <String Key="RuleFile">Fichier de règles</String>
  <String Key="RuleDescription">Description de la règle</String>
  <String Key="Source">Source</String>
  <String Key="Status">État</String>
  <String Key="Target">Cible</String>
  <String Key="Warning">Avertissement</String>
  <String Key="Warnings">avertissement(s)</String>
  <String Key="ReportTitle">Rapport d'analyse du code</String>
 </Localized>
</FxCopReport>
