<Window x:Class="AxView.MainWindowP"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ViewModel="clr-namespace:AxViewModel;assembly=AxViewModel"
        xmlns:View="clr-namespace:AxView.View"
        xmlns:res="clr-namespace:AxLanguage;assembly=AxLanguage"
        xmlns:conv="clr-namespace:AxView.Converters"
        mc:Ignorable="d"
        DataContext="{Binding MainP, Source={StaticResource Locator}}" WindowStyle="None" Width="1920" Height="1080" Title="ReaPlan patient" Background="Silver" Name="winMainP" ResizeMode="NoResize">
    <Window.Resources>
        <conv:BoolToVisibilityConverter x:Key="boolConverter"/>
        <conv:DotXConverter x:Key="objDotXConverter" />
        <conv:DotYConverter x:Key="objDotYConverter" />
        <conv:DotXCenterConverter x:Key="objDotXCenterConverter" />
        <conv:DotYCenterConverter x:Key="objDotYCenterConverter" />
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="{Binding FondUi, Mode=OneWay}" />
        </Grid.Background>
        <Canvas>
            <Polyline Name="Celrcle_gauche" Points="{Binding ExoPoulies.PoulieGauche.Points}" Stroke="{Binding ExoPoulies.PoulieGauche.Couleur}" StrokeThickness="{Binding ExoPoulies.PoulieGauche.Taille}" Visibility="{Binding Path=StyleRobotLive.Visibility, Converter={StaticResource boolConverter}}" />

            <Polyline Name="Celrcle_Droite" Points="{Binding ExoPoulies.PoulieDroite.Points}" Stroke="{Binding ExoPoulies.PoulieDroite.Couleur}" StrokeThickness="{Binding ExoPoulies.PoulieDroite.Taille}" Visibility="{Binding Path=StyleRobotLive.Visibility, Converter={StaticResource boolConverter}}" />

            <Polyline Name="Barre_Verticale" Points="{Binding ExoPoulies.BarreVerticale}" Stroke="Black" StrokeThickness="5" Visibility="{Binding Path=StyleRobotLive.Visibility, Converter={StaticResource boolConverter}}" />

            <Polyline Points="{Binding Position2RobotBase}" Fill="{x:Null}" Stroke="{Binding Path=StyleRobotBase.Couleur, Mode=OneWay}" StrokeDashArray="{Binding Path=StyleRobotBase.BaseStyle, Mode=OneWay}" StrokeThickness="{Binding Path=StyleRobotBase.Taille, Mode=OneWay}" StrokeLineJoin="Round" Visibility="{Binding Path=StyleRobotBase.Visibility, Converter={StaticResource boolConverter}}" />
            <Polyline Name="Live1" Points="{Binding PositionRobotLive}" Fill="{x:Null}" Stroke="{Binding Path=StyleRobotLive.Couleur, Mode=OneWay}" StrokeThickness="{Binding Path=StyleRobotLive.Taille, Mode=OneWay}" Visibility="{Binding Path=StyleRobotLive.Visibility, Converter={StaticResource boolConverter}}" StrokeDashCap="Round" StrokeLineJoin="Round" />
            <Ellipse Canvas.Left="{Binding Path=PositionRobotLive, Mode=OneWay, Converter={StaticResource objDotXConverter}}" Canvas.Top="{Binding Path=PositionRobotLive, Mode=OneWay, Converter={StaticResource objDotYConverter}}" Height="30" Stroke="Black" Width="30" StrokeThickness="5" Fill="{Binding Path=StyleRobotLive.Couleur, Mode=OneWay}" Visibility="{Binding Path=StyleRobotLive.Visibility, Converter={StaticResource boolConverter}}"/>
        </Canvas>
        <Canvas>
            <Canvas.LayoutTransform>
                <ScaleTransform ScaleX="-1" ScaleY="-1" />
            </Canvas.LayoutTransform>
            <!--<Polyline Points="{Binding Position2RobotBase}" Fill="{x:Null}" Stroke="{Binding Path=StyleRobotBase.Couleur, Mode=OneWay}" StrokeDashArray="{Binding Path=StyleRobotBase.BaseStyle, Mode=OneWay}" StrokeThickness="{Binding Path=StyleRobotBase.Taille, Mode=OneWay}" StrokeLineJoin="Round" Visibility="{Binding Path=StyleRobotBase.Visibility, Converter={StaticResource boolConverter}}" />-->
            <Polyline Points="{Binding Position2RobotLive}" Fill="{x:Null}" Stroke="{Binding Path=StyleRobotLive2.Couleur, Mode=OneWay}" StrokeThickness="{Binding Path=StyleRobotLive2.Taille, Mode=OneWay}" Visibility="{Binding Path=StyleRobotLive.Visibility, Converter={StaticResource boolConverter}}" StrokeDashCap="Round" StrokeLineJoin="Round" />
            <Ellipse Canvas.Left="{Binding Path=Position2RobotLive, Mode=OneWay, Converter={StaticResource objDotXConverter}}" Canvas.Top="{Binding Path=Position2RobotLive, Mode=OneWay, Converter={StaticResource objDotYConverter}}" Height="30" Stroke="Black" Width="30" StrokeThickness="5" Fill="{Binding Path=StyleRobotLive2.Couleur, Mode=OneWay}" Visibility="{Binding Path=StyleRobotLive2.Visibility, Converter={StaticResource boolConverter}}" />
        </Canvas>

        <ItemsControl ItemsSource="{Binding ExoPoulies.Plats}" Visibility="{Binding Path=StyleRobotLive.Visibility, Converter={StaticResource boolConverter}}">
            <ItemsControl.RenderTransform>
                <RotateTransform Angle="{Binding Angle}"/>
            </ItemsControl.RenderTransform>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Rectangle Stroke="Black" StrokeThickness="{Binding Epaisseur}" Fill="{Binding Couleur}" Opacity="{Binding Opaque}">
                        <Rectangle.RenderTransform>
                            <RotateTransform Angle="{Binding Angle}" CenterX="{Binding CentreX}" CenterY="{Binding CentreY}"/>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Canvas.Left" Value="{Binding X}" />
                    <Setter Property="Canvas.Top" Value="{Binding Y}" />
                    <Setter Property="Canvas.Width" Value="{Binding Width}" />
                    <Setter Property="Canvas.Height" Value="{Binding Height}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>

        <View:CountdownView HorizontalAlignment="Center" VerticalAlignment="Top" Margin="12,80,12,12" Visibility="{Binding StartingSequenceActivated, Converter={StaticResource boolConverter}}" />
        <View:PauseView  Visibility="{Binding Pause, Converter={StaticResource boolConverter}}"/>
    </Grid>
</Window>
